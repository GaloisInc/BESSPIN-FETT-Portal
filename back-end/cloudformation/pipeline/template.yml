AWSTemplateFormatVersion: '2010-09-09'
Description: github-codepipeline
Parameters:
  GitHubOwner:
    Type: String
  GitHubRepo:
    Type: String
  GitHubBranch:
    Type: String
  CICDS3Bucket:
    Type: String
    Description: Name of bucket where CICD artifacts will be stored
  SecurityGroupIds:
    Type: CommaDelimitedList
    Description: Comma seperated list of security group ID's for pipeline to run as, will need to be able to connect to RDS
  Subnets:
    Type: CommaDelimitedList
    Description: Comma seperated list of subnets to put pipeline in, will need to be able to connect to RDS
  VpcId:
    Type: String
    Description: ID of VPC to put pipeline in    
Resources:
  CloudFormationTrustRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - iam:CreateRole
            - iam:AttachRolePolicy
            - iam:PutRolePolicy
            - iam:PassRole
            - iam:DetachRolePolicy
            - iam:ListRolePolicies
            - iam:GetRole
            - iam:DeleteRolePolicy
            - iam:UpdateRoleDescription
            - iam:ListRoles
            - iam:DeleteRole
            - iam:GetRolePolicy
            - iam:CreateInstanceProfile
            - iam:AddRoleToInstanceProfile
            - iam:DeleteInstanceProfile
            - iam:GetInstanceProfile
            - iam:ListInstanceProfiles
            - iam:ListInstanceProfilesForRole
            - iam:RemoveRoleFromInstanceProfile
            Effect: Allow
            Resource:
            - !Sub
              - "arn:aws:iam::*:role/${stackname}*"
              - { stackname: !Ref 'AWS::StackName' }
            - !Sub
              - "arn:aws:iam::*:instance-profile/${stackname}*"
              - { stackname: !Ref 'AWS::StackName' }
          - Action:
            - ssm:GetParameters
            Effect: Allow
            Resource: '*'
        PolicyName: !Join
          - '-'
          -  - !Ref 'AWS::StackName'
             - CloudFormationRolePolicy
      RoleName: !Join
        - '-'
        -  - !Ref 'AWS::StackName'
           - CloudFormation
    Type: AWS::IAM::Role

  CodePipelineTrustRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Sid: 1
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            - codebuild:StopBuild
            Effect: Allow
            Resource:
            - !GetAtt CodeBuildProject.Arn
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource:
            - !GetAtt
              - CloudFormationTrustRole
              - Arn
        PolicyName: !Join
          - '-'
          - - !Ref 'AWS::StackName'
            - CodePipelineRolePolicy
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - CodePipeline
    Type: AWS::IAM::Role

  Pipeline:
    DependsOn:
    - CodePipelineTrustRole
    - CodeBuildProject
    - CloudFormationTrustRole
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref CICDS3Bucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: !Join ['-', [ !Ref 'AWS::StackName', SourceArtifact ] ]
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: "{{resolve:secretsmanager:githubPersonalAccess:SecretString:gitHubOAuthToken}}"
              RunOrder: 1
        -
          Name: Build
          Actions:
          - Name: Build
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: '1'
            Configuration:
              ProjectName: !Ref 'AWS::StackName'
            InputArtifacts:
            - Name: !Join
              - '-'
              - - !Ref 'AWS::StackName'
                - SourceArtifact
            OutputArtifacts:
            - Name: !Join
              - '-'
              - - !Ref 'AWS::StackName'
                - BuildArtifact
            RunOrder: 1

  CodeBuildRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - CodeBuild
    Type: AWS::IAM::Role

  CodeBuildPolicy:
    Properties:
      PolicyDocument:
        Statement:
        - Action: "*"
          Effect: Allow
          Resource: '*'
      PolicyName: !Join
        - '-'
        -  - !Ref 'AWS::StackName'
           - CodeBuildPolicy
      Roles:
      - !Ref 'CodeBuildRole'
    Type: AWS::IAM::Policy

  CodeBuildProject:
    DependsOn:
    - CodeBuildPolicy
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Name: 'build-output.zip'
        NamespaceType: BUILD_ID
        Packaging: ZIP
        Path: 'codebuild'
        ArtifactIdentifier: !Join ['-', [ !Ref 'AWS::StackName', SourceArtifact ] ]
        Type: CODEPIPELINE
      Description: !Join
        - ''
        - - 'CodeBuild Project for '
          - !Ref 'AWS::StackName'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CURRENT_STAGE
            Type: PLAINTEXT
            Value: !Ref GitHubBranch
      Name: !Ref 'AWS::StackName'
      ServiceRole: !Ref 'CodeBuildRole'
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub 'buildspecs/buildspec.${GitHubBranch}.yml'
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroupIds
        Subnets: !Ref Subnets
        VpcId: !Ref VpcId

  # 'GithubWebhook' satisfies two requirements:
  # -- Means that updates are pushed from GitHub, rather than AWS having to poll
  # -- Means we can filter for required changes
  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: "{{resolve:secretsmanager:githubPersonalAccess:SecretString:gitHubOAuthToken}}"
      RegisterWithThirdParty: true
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref Pipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt Pipeline.Version

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
        # This is hard to guess at since this pipeline
        # will be running cloudformation on many different projects requiring many different resource permissions.

  RafEC2Queue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: "RafEC2Queue"
