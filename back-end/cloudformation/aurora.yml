Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: This is used for Aurora Serverless
      DBSubnetGroupName: ${self:service.name}-${self:provider.stage}-rds-subnetgroup
      SubnetIds:
        - ${file(config/config.${self:provider.stage}.json):VPC_SUBNET_ID_1}
        - ${file(config/config.${self:provider.stage}.json):VPC_SUBNET_ID_2}
        - ${file(config/config.${self:provider.stage}.json):VPC_SUBNET_ID_3}
  RDSAuroraServerlessCluster:
    DependsOn: AuroraSecurityGroup
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Delete
    Properties:
      DeletionProtection: false
      MasterUsername: ${ssm:/${self:service.name}/${self:provider.stage}/db-aurora/user}
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref Secret, '}}' ]]
      DatabaseName: ${self:service.name}${self:provider.stage}
      Engine: aurora
      EngineMode: serverless
      ScalingConfiguration:
        AutoPause: true
        MaxCapacity: 16
        MinCapacity: 2
        SecondsUntilAutoPause: 500
      DBSubnetGroupName:
        Ref: DBSubnetGroup
      VpcSecurityGroupIds: 
        - !GetAtt AuroraSecurityGroup.GroupId
  Secret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: ${self:service.name}-${self:provider.stage}-db-password
      Description: 'RDS Password'
      GenerateSecretString:
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
  # RDSEndpointSSM:
  #   DependsOn: RDSAuroraServerlessCluster
  #   Type: AWS::SSM::Parameter
  #   Properties:
  #     Name: /${self:service.name}/${self:provider.stage}/db-aurora/endpoint
  #     Type: String
  #     Value: !GetAtt RDSAuroraServerlessCluster.Endpoint.Address
  #     Description: Endpoint for Fett Portal-${self:provider.stage}
  #     Tags:
  #       Environment: ${opt:stage}
  RDSSchemaSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /${self:service.name}/${self:provider.stage}/db-aurora/schema
      Type: String
      Value: FettPortal
      Description: Schema of Fett Portal DB
      Tags:
        Environment: ${opt:stage}
  AuroraSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: fett-portal AuroraDB Serverless
      GroupName: ${self:service.name}-aurora-${self:provider.stage}
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId: ${file(config/config.${self:provider.stage}.json):VPC_SECURITY_GROUP_ID}
        Description: 3306 access from default SG
      VpcId: ${file(config/config.${self:provider.stage}.json):vpcId}
